!  deflect-slats.agps
!   D.Bogue  10/5/18
!   Inputs
!     wingup    Upper wing surface
!     winglo    Lower wing surface
!      trims:  T0 list of trim planes
!           --> Each object is another T0 list containing 2 4D points
!                 --> Each point is a 4D plane specification Ax+By+Cz+D=0
!      hingelines:  T0 list of hinge line specs
!                --> Each object is another T0 list containing 2 points
!                  --> Points are IB/OB XYZ coordinates of hingelines
!                  --> Orientation is RHR around pt1->pt2 for positive defl.


!   Outputs
!     trimmedslats   List of List of slat elements. Each list contains  [(slatup, slatarc, slatlo)]
!_____________________________________________________________

call get_length(hingelines,nflaps)
ren slatlist ignore=yes
write '--> Deflecting Slats on Upper Surface <----'
for if=1 to nflaps do
   ren [hline,hlinepts,clopt,xtmap,hlproj,hlprojc,hlprojcxt,hlprojcxti,hlprojctr] ignore=yes
   ren [hlprojcxtu,hlprojcxtl,hlintsrf,wui,hlii,wupi,wuii,wupii,hltrmap,hltrimmed] ignore=yes
   ren [ibtrmap,obtrmap,ibmaptrim,obmaptrim,ibcrv,obcrv,obmap,ibmap,slatup] ignore=yes
   ren [ib1,ob1,ib2,ob2,ib3,ob3,hlwing,hlup,hllo,hlintsrf2,hlisi,wingupi] ignore=yes
   !  Disretize hingelines 
   fcv hline  [hingelines.<if>.1:2]
   grd hline hlinepts 21 linear linear
   call get_length(hlinepts,npts)
   ren [clopt] ignore=yes
   for ip=1 to npts  do
        clo wingup clopt hlinepts.<ip> Dist-Symbol=
        cst hlproj clopt
        ren clopt
   enddo
   !  Extend this a little to insure clean trim   
   cbn xtmap [(-0.05),(1.05)]
   fcv hlprojc hlproj
   csb hlprojcxt xtmap hlprojc
   !  Trim back to specified plane
   pci hlprojcxt hlprojcxti Number-Of-Planes=1 trims.<if>
   ecv hlprojcxt hlprojctr hlprojcxti.1.1 hlprojcxti.2.1
   
   trn hlprojcxtu hlprojcxt (0,0,1)
   trn hlprojcxtl hlprojcxt (0,0,-1)
   stc hlintsrf [hlprojcxtl,hlprojcxtu]
   ssi wingup hlintsrf wui hlii
   !  Wing Sub-range par-curve is wui.L.1
   !  Chop wing along trim planes
   !    wui is the aft trim on the wing
   int wingup wupi Num=1 0 yes trims.<if>.1 Chord=.001  Quick=NO
   int wingup wupi Num=1 0 yes trims.<if>.2 Chord=.001  Quick=NO
   csi wupi.L-1 hlintsrf wupii hlintsrfi
   csi wupi.L   hlintsrf wupii hlintsrfi
   csb ib1 wupii.1.1 wupi.L-1
   csb ob1 wupii.L.1 wupi.L
   clo wingup ib2 ib1
   clo wingup ob2 ob1
   clo wui.L ib3 ib2
   clo wui.L ob3 ob2
   ecv wui.L hlwing ib3.1 ob3.1
   trn hllo hlwing (0,0,-10)
   trn hlup hlwing (0,0,10)
   stc hlintsrf2 [hllo,hlup]
   ssi wingup hlintsrf2 wingupi hlisi
   !cci wui.L.1 wupi.L-1.1 wuii wupii (0,0,1) Dist-Symbol=
   !cci wui.L.1 wupi.L.1   wuii wupii (0,0,1) Dist-Symbol=
   !  Trim back hingeline mapped to wing surface
   cbn hltrmap [ib3.1,ob3.1]
   csb hltrimmed hltrmap wui.L
   
   cbn ibmaptrim [wupii.L-1.1,(1)]
   csb ibmap ibmaptrim wupi.L-1.1
   csb ibcrv ibmap wingup
   cbn obmaptrim [wupii.L.1,(1)]
   csb obmap obmaptrim wupi.L.1
   csb obcrv obmap wingup
   @geomcom:limsurf.com(ZSURF=wingup,ZBOT=ibcrv,ZTOP=obcrv,ZLEFT=wui.L,SMAX=1.,ZOUT=slatup,ZDRAW=NO,ZSUPPRESS=YES)
   atl slatlist [slatup]
enddo

write '--> Deflecting Slats on Lower Surface <----'
call get_length(hingelines,nflaps)
!  Now the lower slat
for if=1 to nflaps do
   ren [hline,hlinepts,clopt,xtmap,hlproj,hlprojc,hlprojcxt,hlprojcxti,hlprojctr] ignore=yes
   ren [hlprojcxtu,hlprojcxtl,hlintsrf,wui,hlii,wupi,wuii,wupii,hltrmap,hltrimmed] ignore=yes
   ren [ibtrmap,obtrmap,ibmaptrim,obmaptrim,ibcrv,obcrv,obmap,ibmap,slatup,slatlo,slatlotr] ignore=yes
   ren [ib1,ob1,ib2,ob2,ib3,ob3,hlwing,hlup,hllo,hlintsrf2,hlisi,wingupi] ignore=yes
   ren [ib1,ob1,ib2,ob2,ib3,ob3,hlwing,hlup,hllo,hlintsrf2,hlisi,wingupi] ignore=yes
   !  Disretize hingelines 
   fcv hline  [hingelines.<if>.1:2]
   grd hline hlinepts 21 linear linear
   call get_length(hlinepts,npts)
   ren [clopt] ignore=yes
   for ip=1 to npts  do
        clo winglo clopt hlinepts.<ip> Dist-Symbol=
        cst hlproj clopt
        ren clopt
   enddo
   !  Extend this a little to insure clean trim   
   cbn xtmap [(-0.05),(1.05)]
   fcv hlprojc hlproj
   csb hlprojcxt xtmap hlprojc
   !  Trim back to specified plane
   pci hlprojcxt hlprojcxti Number-Of-Planes=1 trims.<if>
   ecv hlprojcxt hlprojctr hlprojcxti.1.1 hlprojcxti.2.1
   
   trn hlprojcxtu hlprojcxt (0,0,1)
   trn hlprojcxtl hlprojcxt (0,0,-1)
   stc hlintsrf [hlprojcxtl,hlprojcxtu]
   ssi winglo hlintsrf wui hlii
   !  Wing Sub-range par-curve is wui.L.1
   
   !  Chop wing along trim planes
   int winglo wupi Num=1 0 yes trims.<if>.1 Chord=.001  Quick=NO
   int winglo wupi Num=1 0 yes trims.<if>.2   Chord=.001  Quick=NO
   csi wupi.L-1 hlintsrf wupii hlintsrfi
   csi wupi.L   hlintsrf wupii hlintsrfi
   csb ib1 wupii.1.1 wupi.L-1
   csb ob1 wupii.L.1 wupi.L
   clo winglo ib2 ib1
   clo winglo ob2 ob1
   clo wui.L ib3 ib2
   clo wui.L ob3 ob2
   ecv wui.L hlwing ib3.1 ob3.1
   trn hllo hlwing (0,0,-10)
   trn hlup hlwing (0,0,10)
   stc hlintsrf2 [hllo,hlup]
   ssi winglo hlintsrf2 wingupi hlisi
   !cci wui.L.1 wupi.L-1.1 wuii wupii (0,0,1) Dist-Symbol=
   !cci wui.L.1 wupi.L.1   wuii wupii (0,0,1) Dist-Symbol=
   !  Trim back hingeline mapped to wing surface
   cbn hltrmap [ib3.1,ob3.1]
   csb hltrimmed hltrmap wui.L
   
   cbn ibmaptrim [(0),wupii.L-1.1]
   csb ibmap ibmaptrim wupi.L-1.1
   csb ibcrv ibmap winglo
   cbn obmaptrim [(0),wupii.L.1]
   csb obmap obmaptrim wupi.L.1
   csb obcrv obmap winglo
   @geomcom:limsurf.com(ZSURF=winglo,ZBOT=ibcrv,ZTOP=obcrv,ZRIGHT=wui.L,SMIN=0.,ZOUT=slatlo,ZDRAW=NO,ZSUPPRESS=YES)
   atl slatlist [slatlo]
   dra slatlist.* col=33
enddo
   ren [hline,hlinepts,clopt,xtmap,hlprojc,hlprojcxt,hlprojcxti,hlprojctr] ignore=yes
   ren [hlprojcxtu,hlprojcxtl,hlintsrf,wui,hlii,wupi,wuii,wupii,hltrmap,hltrimmed] ignore=yes
   ren [ibtrmap,obtrmap,ibmaptrim,obmaptrim,ibcrv,obcrv,obmap,ibmap,slatup,slatlo] ignore=yes
   ren [ib1,ob1,ib2,ob2,ib3,ob3,hlwing,hlup,hllo,hlintsrf2,hlisi,wingupi] ignore=yes
   
   
ren [slatdef,sltr,sltemap,slatarc,arclist,slatrad] ignore=yes
ren [slatlod,slatupd,slatupdxt,slatlodxt,slatradxt,slatupdxti,slatlodxti,slatradxti] ignore=yes
ren [slatupdtr,slatlodtr,slatradtr,slte] ignore=yes
ren [trimmedslats,hline] ignore=yes
write '--> Rotating Slats <----'
! Rotate parts
call get_length(hingelines,nflaps)
for iflap=1 to nflaps
   call get_coord(deflections.<iflap>,0,0,defl)
   !  Rotate the upper slat
   fcv hline   [hingelines.<iflap>.1:2]
   gtx slatupd slatlist.<iflap> rot <-defl> hline Arg3= Arg4=
   !  Create arc-conic segment between slat and wing upper surfaces
   write '----> Creating Arc-segment <----'
   cbn sltemap [(0,0),(0,1)]
   csb slte sltemap slatlist.<iflap>
   for irot=1 to 30 do
      ang=(irot-1)*(-defl/(30-1))
      gtx slatarc slte rot <ang> hline Arg3= Arg4=
      atl arclist slatarc
      ren [slatarc]
   enddo
   stc slatrad arclist.*
   dra slatrad col=33
   !   Rotate the lower slat and trim with wing
   gtx slatlod slatlist.<iflap+nflaps> rot <-defl> hline 
   ssi slatlod winglo slatloi wingloi
   @geomcom:limsurf.com(ZSURF=slatlod,ZRIGHT=slatloi.L,ZOUT=slatlodtr,ZDRAW=no,ZSUPPRESS=yes)
   ren slatlod
   ren slatlodtr slatlod
   write '-------> Extend then trim slat upper/lower/arc-conic <----'
!   pause
   !   Extend and trim each segment to specified trim planes
   !    --> Each surface extended in 't' direction
   @geomcom:flipst.com(ZISRF=slatrad,ZINP=(2,1),ZDRAW=NO,ZOSRF=slatrad2)
   ren slatrad
   ren slatrad2 slatrad
   write ' --> Extending surfaces <----'
   @geomcom:limsurf.com(ZSURF=slatupd,TMIN=-0.05,TMAX=1.05,ZOUT=slatupdxt,ZDRAW=no,ZSUPPRESS=yes)
   @geomcom:limsurf.com(ZSURF=slatlod,TMIN=-0.05,TMAX=1.05,ZOUT=slatlodxt,ZDRAW=no,ZSUPPRESS=yes)
   @geomcom:limsurf.com(ZSURF=slatrad,TMIN=-0.05,TMAX=1.05,ZOUT=slatradxt,ZDRAW=no,ZSUPPRESS=yes)
   int slatupdxt slatupdxti Num=2 Cut=trims.<iflap>
   int slatlodxt slatlodxti Num=2 Cut=trims.<iflap>
   int slatradxt slatradxti Num=2 Cut=trims.<iflap>
   write 'Trimming extended surfaces'
!   pause
   @geomcom:limsurf.com(ZSURF=slatupdxt,ZBOT=slatupdxti.L-1,ZTOP=slatupdxti.L,ZOUT=slatupdtr,ZDRAW=no,ZSUPPRESS=yes)
   @geomcom:limsurf.com(ZSURF=slatlodxt,ZBOT=slatlodxti.L-1,ZTOP=slatlodxti.L,ZOUT=slatlodtr,ZDRAW=no,ZSUPPRESS=yes)
   @geomcom:limsurf.com(ZSURF=slatradxt,ZBOT=slatradxti.L-1,ZTOP=slatradxti.L,ZOUT=slatradtr,ZDRAW=no,ZSUPPRESS=yes)   
   write 'Completed parts trim'
   atl slats [slatupdtr,slatradtr,slatlodtr]
   atl trimmedslats [slats]
   ren [slats]
   ren [slatdef,sltr,sltemap,slatarc,arclist,slatrad] ignore=yes
   ren [slatlod,slatupd,slatupdxt,slatlodxt,slatradxt,slatupdxti,slatlodxti,slatradxti] ignore=yes
   ren [slatupdtr,slatlodtr,slatradtr,slte] ignore=yes 
   ren [hline] ignore=yes
enddo
